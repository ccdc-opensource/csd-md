#!/usr/bin/env python3
import os
import shutil
from pathlib import Path


###############################################################
# This script will clean up the files generated by the script
# test_install.py and leave the folder as it was before the
# tests.
###############################################################


EXAMPLES = [
        'asp-gas-MM', 'asp-solution-MM', 'asp-gas-MM-enhanced',
        'asp-gas-ML', 'asp-solution-ML', 'ibu-gas-ML',
        'ibu-solution-MM-enhanced', '4ph9-protein-MM',
        'asp-4ph9-MM', 'asp-4ph9-ML', 'ibu-4ph9-MM'
        ]

FILES = [   
         'COLVAR_1', 'COLVAR_2', 'HILLS_1', 'HILLS_2',
         'bck.0.COLVAR_1', 'bck.0.COLVAR_2', 'bck.0.HILLS_1',
         'bck.0.HILLS_2', 'conformer_generator.log',
         'conformer_generator.warn', 'db.json', 'output.pdb',
         'ibu-solution-MM-enhanced.log'
         ]

DIRECTORIES = ['docking_output', 'md_data', 'md_input']


def main():

    for example in EXAMPLES:
        file_path = Path.cwd() / f"{example}.log"
        if os.path.exists(file_path):
            os.remove(file_path)
        else:
            print(f"File {file_path} does not exist.")

    for file in FILES:
        file_path = Path.cwd() / f"{file}"
        if os.path.exists(file_path):
            os.remove(file_path)
        else:
            print(f"File {file_path} does not exist.")

    for directory in DIRECTORIES:
        dir_path = Path.cwd() / f"{directory}"
        if os.path.exists(dir_path):
            shutil.rmtree(dir_path)
        else:
            print(f"Directory {dir_path} does not exist.")


if __name__ == '__main__':
    main()

